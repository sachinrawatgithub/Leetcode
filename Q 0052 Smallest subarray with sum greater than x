Given an array of positive integers nums and a positive integer target, return the minimal length of a contiguous subarray [numsl, numsl+1, ..., numsr-1, numsr] of which the sum is greater than or equal to target. If there is no such subarray, return 0 instead.
Example 1:

Input: target = 7, nums = [2,3,1,2,4,3]
Output: 2
Explanation: The subarray [4,3] has the minimal length under the problem constraint.
Example 2:

Input: target = 4, nums = [1,4,4]
Output: 1
Example 3:

Input: target = 11, nums = [1,1,1,1,1,1,1,1]
Output: 0
 

Constraints:

1 <= target <= 109
1 <= nums.length <= 105
1 <= nums[i] <= 104
 

Follow up: If you have figured out the O(n) solution, try coding another solution of which the time complexity is O(n log(n)).

** Can't Upload img here hence see the comments below 
** Use 2 pointer starting i=0,j=-1 
** sum variable to store sum of the subaary from i to j 

class Solution {
public:
    int minSubArrayLen(int x, vector<int>& a)
    {
        int sum,i,j,n=a.size();
        sum=i=0,j=-1;
        int ans=n+1;
        int flag=0;
        
        // cout<<"n="<<n<<endl;
        while(j<n)   
        {  
            // cout<<"j < n   "<<j<<"<"<<n;
            
            if(sum >= x) // IF SUM >= target means subarry is found so cal ans  
            {                
                ans=min(j-i+1,ans);// cal length of subarray
                
                if(i+1 <= j )// as subarry is found no need of j++ as it will increse sum ans subarry length 
                            // so inste i++ and check whether subarry is possible or not   WHEN (sum-x) < a[i] then sum>=x is possible
                {
                    sum-=a[i];
                    i++;
                    continue;//so no other lines run after i++;
                }
                else
                {
                     j++;
                     if(j<n)
                      sum+=a[j];
                }
                
            }
            else
            {
                j++;
                // cout<<"+";
                if(j<n)
                   sum+=a[j];
                // cout<<j<<" "<<ans<<" "<<sum<<endl;
            }
        }
        
        
    if(ans!=n+1)    
       return ans;  
    else
        return 0;
    }
};




