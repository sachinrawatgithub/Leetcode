Q. Given an array arr[] and an integer K where K is smaller than size of array, the task is to find the Kth smallest element in the given array. 
   It is given that all array elements are distinct.

Example 1:
Input:
N = 6
arr[] = 7 10 4 3 20 15
K = 3
Output : 7
Explanation :
3rd smallest element in the given 
array is 7.

    //quick select algo-> used to get 1 element from unsorted array
    //from its correct position(postion of it in sort array) 
    
    // h(always last ele) is pivot element means after every execution of 
    // for loop pivot element will be in its correct position
    
//IMP Recurrence rel. For this function is T(n)=T(n/2)+n    hence TC-O(n)
int fun(int a[],int l,int h,int k)
    {      
        int i=l-1;
        for(int j=l;j<h;j++)
        {
            if(a[j]<a[h])
            {
                i++;
                swap(a[i],a[j]);
            }
            
        }
        swap(a[i+1],a[h]);// swaping because the right pos of h is in index i+1
        // after every loop h will be in its correct position
        
        if(k==i+2)
        {
            return a[i+1];  //because the right pos of h is in index i+1
        }
        else if(k<i+2)
        {
            fun(a,l,i,k); //selection of the right(sahi) part of array for further processing  
        }
        else
        {
            fun(a,i,h,k); ////selection of the right(sahi) part of array for further processing 
        }
    }
    
    int kthSmallest(int a[], int l, int r, int k) 
    {
        return fun(a,l,r,k);
    } 
