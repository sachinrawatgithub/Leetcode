Given a string S, find the longest palindromic substring in S. Substring of string S: S[ i . . . . j ] where 0 ≤ i ≤ j < len(S). Palindrome string: A string which reads the same backwards. More formally, S is palindrome if reverse(S) = S. Incase of conflict, return the substring which occurs first ( with the least starting index).


Example 1:

Input:
S = "aaaabbaa"
Output: aabbaa
Explanation: The longest Palindromic
substring is "aabbaa".

-> solving this with two assumption

1. when palindrome string is odd
**** point is to move from index to its left and right and match 
**** if match move l to left and h to right again check and count len of palindrome 

2. when palindrome string is even
**** same logic as above but this time l=i



class Solution {
  public:
    string longestPalin (string s) 
    {
        int n=s.size();
        int x=0,y;
        int count=1,maxlen=1;
        
        if(n<2)
         return s;
         
        //considering as odd len palindrome string present
        int i=1,l=0,h=i+1;
        while(i<n)
        {
            l=i-1;
            h=i+1;
            while(l>=0 && h<n && s[l]==s[h])
            {
              count=h-l+1;
              if(maxlen < count)
                { 
                  x=l;
                  y=h;    
                }
              maxlen=max(maxlen,count);
              
              l--;
              h++;
            }
            
        i++;
        maxlen=max(maxlen,count);
        }
        
        //considering as even len palindrome string present
        i=0,l=0,h=i+1;
        while(i<n)
        {
            l=i;
            h=i+1;
            while(l>=0 && h<n && s[l]==s[h])
            {
              count=h-l+1;
              if(maxlen < count)
                { 
                  x=l;
                  y=h;    
                }
              l--;
              h++;
            }
            
        i++;
        maxlen=max(maxlen,count);
        }
    
    string str="";    
    for(int j=0;j<maxlen;j++)
        str=str+s[j+x];   

    return str;    
    }
};
