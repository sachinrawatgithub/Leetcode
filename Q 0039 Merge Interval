Given a collection of Intervals, the task is to merge all of the overlapping Intervals.

Example 1:

Input:
Intervals = {{1,3},{2,4},{6,8},{9,10}}
Output: {{1, 4}, {6, 8}, {9, 10}}
Explanation: Given intervals: [1,3],[2,4]
[6,8],[9,10], we have only two overlapping
intervals here,[1,3] and [2,4]. Therefore
we will merge these two and return [1,4],
[6,8], [9,10].


//--> IMPORTANT How to remove ele from vector

class Solution {
public:
    vector<vector<int>> overlappedInterval(vector<vector<int>>& a) 
    {
        //sort in terms of first ele
        //travel i=0 to n-2
        //ith second < (i+1)th first it means no merge
        //else merge (case{1,4},{2,3}  and remove (i+1)th ele ) 
        
        sort(a.begin(),a.end());
        
        int i=0;
        while(i < a.size()-1)
        {
            if(a[i][1] < a[i+1][0])
            {
                i++;
            }
            else 
            {
                a[i][1] = max(a[i][1], max( a[i+1][0], a[i+1][1]) );
                vector<vector<int>>::iterator it=a.begin()+(i+1); //IMPORTANT
                a.erase(it);
            }
           
        }
    
    return a;    
    }
};
