Q. Given an array arr[] and an integer K where K is smaller than size of array, the task is to find the Kth smallest element in the given array. 
   It is given that all array elements are distinct.

Example 1:
Input:
N = 6
arr[] = 7 10 4 3 20 15
K = 3
Output : 7
Explanation :
3rd smallest element in the given 
array is 7.

* Using Partition logic of quicksort 
- With partition we get to know the ele right place in the sorted array

int fun(int a[],int l,int h,int k)// Recurrence rel. For this function is T(n)=T(n/2)+n    hence TC-O(n)
    {
        int mid=(l+h)/2;
        swap(a[mid],a[h]);
      
        int i=l;
        for(int j=l;j<h;j++)
        {
            if(a[j]<a[h])
            {
                swap(a[i],a[j]);
                i++;
            }
            
        }

        swap(a[i],a[h]);
        
        if(k==i+1)
        {
            return a[i];
        }
        else if(k<i+1)
        {
            fun(a,l,i-1,k);
        }
        else
        {
            fun(a,i+1,h,k);
        }
    }
    
    int kthSmallest(int a[], int l, int r, int k) 
    {
        return fun(a,l,r,k);
    } 
